{"version":3,"sources":["js/timer.js","index.js"],"names":["CountdownTimer","constructor","selector","targetDate","valueDays","document","querySelector","valueHours","valueMins","valueSecs","onTimeCounter","getTimeComponents","time","days","String","Math","floor","padStart","hours","mins","secs","updateTimeOnPage","textContent","intervalID","setInterval","Date","now","clearInterval","countTimer"],"mappings":";;;AAAA,MAAMA,EACJC,aAAY,SAAEC,EAAF,WAAYC,IACjBD,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EACbC,KAAAA,UAAYC,SAASC,iBAAiBJ,yBACtCK,KAAAA,WAAaF,SAASC,iBAAiBJ,0BACvCM,KAAAA,UAAYH,SAASC,iBAAiBJ,yBACtCO,KAAAA,UAAYJ,SAASC,iBAAiBJ,yBACtCQ,KAAAA,gBAGPC,kBAAmBC,GAKV,MAAA,CAAEC,KAJIC,OAAOC,KAAKC,MAAMJ,EAAQ,QAAuBK,SAAS,EAAG,KAI3DC,MAHDJ,OAAOC,KAAKC,MAAOJ,EAAQ,MAAyB,OAAkBK,SAAS,EAAG,KAG1EE,KAFTL,OAAOC,KAAKC,MAAOJ,EAAQ,KAAoB,MAAaK,SAAS,EAAG,KAEzDG,KADfN,OAAOC,KAAKC,MAAOJ,EAAQ,IAAc,MAAOK,SAAS,EAAG,MAI3EI,kBAAkB,KAAER,EAAF,MAAQK,EAAR,KAAeC,EAAf,KAAqBC,IAChChB,KAAAA,UAAUkB,eAAiBT,IAC3BN,KAAAA,WAAWe,eAAiBJ,IAC5BV,KAAAA,UAAUc,eAAiBH,IAC3BV,KAAAA,UAAUa,eAAiBF,IAGlCV,gBACOa,KAAAA,WAAaC,YAAY,KACtBZ,MAAAA,EAAO,KAAKT,WAAasB,KAAKC,MAC/BL,KAAAA,iBAAiB,KAAKV,kBAAkBC,IACzCA,EAAO,KAAQe,cAAc,KAAKJ,aACrC,MAIP,MAAMK,EAAa,IAAI5B,EAAe,CACpCE,SAAU,WACVC,WAAY,IAAIsB,KAAK;;ACpCvB,aADA,QAAA,oBACA,QAAA","file":"src.20930ff8.js","sourceRoot":"..\\src","sourcesContent":["class CountdownTimer {\r\n  constructor({ selector, targetDate}) {\r\n    this.selector = selector;\r\n    this.targetDate = targetDate;\r\n    this.valueDays = document.querySelector(`${selector} [data-value=\"days\"]`);\r\n    this.valueHours = document.querySelector(`${selector} [data-value=\"hours\"]`);\r\n    this.valueMins = document.querySelector(`${selector} [data-value=\"mins\"]`);\r\n    this.valueSecs = document.querySelector(`${selector} [data-value=\"secs\"]`);\r\n    this.onTimeCounter();\r\n  };\r\n\r\n  getTimeComponents (time) {\r\n    const days = String(Math.floor(time / (1000 * 60 * 60 * 24))).padStart(2, '0');\r\n    const hours = String(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))).padStart(2, '0');\r\n    const mins = String(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60))).padStart(2, '0');\r\n    const secs = String(Math.floor((time % (1000 * 60)) / 1000)).padStart(2, '0');\r\n    return { days, hours, mins, secs };\r\n};\r\n\r\n  updateTimeOnPage ({ days, hours, mins, secs }) {\r\n    this.valueDays.textContent = `${days}`;\r\n    this.valueHours.textContent = `${hours}`;\r\n    this.valueMins.textContent = `${mins}`;\r\n    this.valueSecs.textContent = `${secs}`;\r\n}\r\n\r\n  onTimeCounter() {\r\n    this.intervalID = setInterval(() => {\r\n      const time = this.targetDate - Date.now();\r\n      this.updateTimeOnPage(this.getTimeComponents(time));\r\n      if (time < 1000) { clearInterval(this.intervalID) }  \r\n    }, 1000);\r\n  }\r\n}\r\n\r\nconst countTimer = new CountdownTimer({\r\n  selector: '#timer-1',\r\n  targetDate: new Date('Jul 16, 2021')\r\n});","import './sass/main.scss';\nimport './js/timer.js'"]}